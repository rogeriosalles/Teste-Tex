unit UnitLogin;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Layouts, FMX.Edit, FMX.Objects,
  FMX.Ani, System.Skia, FMX.Skia,Threading;

type
  TfrmLogin = class(TForm)
    lyPrincipal: TLayout;
    Label1: TLabel;
    edtLogin: TEdit;
    Label2: TLabel;
    edtSenha: TEdit;
    lyLogin: TLayout;
    imgLogo: TImage;
    rectButtonLogar: TRectangle;
    Label3: TLabel;
    FloatAnimation1: TFloatAnimation;
    Image1: TImage;
    procedure Label3MouseLeave(Sender: TObject);
    procedure rectButtonLogarClick(Sender: TObject);
    procedure Image1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;

implementation

{$R *.fmx}

uses uControllerLogin, Loading;

procedure TfrmLogin.Image1Click(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmLogin.Label3MouseLeave(Sender: TObject);
begin
  rectButtonLogar.Opacity := 0.2;
end;

procedure TfrmLogin.rectButtonLogarClick(Sender: TObject);
var
  ControllerLogin : TControllerLogin;
  Validado : Boolean;
  
begin
  FloatAnimation1.Start;

  ControllerLogin := TControllerLogin.Create;

  if (edtlogin.Text = '') or (edtSenha.Text = '') then
    Abort;


  TThread.CreateAnonymousThread(
  procedure
  begin
    try
     TLoading.Show('Autenticando usuário.',frmLogin);
     sleep(2000);
     Validado := False;
     TThread.Synchronize(nil,
      procedure
      begin
        ControllerLogin.ModeloLogin.Login := Trim(edtLogin.Text);
        ControllerLogin.ModeloLogin.Senha := Trim(edtSenha.Text);

        if ControllerLogin.ModeloLogin.AutenticarLogin then
           Close
      end);
    finally
      TLoading.Hide;
    end;
  end).Start;

  if Validado then
    ShowMessage('tudo certo')
  else ShowMessage('erro ao logar');

end;



end.
